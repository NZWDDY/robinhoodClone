{"version":3,"sources":["config.js","store/actions/current-user.js","store/actions/authentication.js","util/route-util.js","LoginPanel.js","LogoutButton.js","util/polygon.js","store/actions/positions.js","store/actions/ui.js","store/actions/history.js","store/actions/current-position.js","PositionDetail.js","store/actions/watched-stocks.js","dashboard/Title.js","dashboard/Orders.js","dashboard/Deposits.js","NewsFeed.js","TopMovers.js","TopLosers.js","UserDetail.js","store/actions/current-watched-stock.js","WatchListDetail.js","search/SearchContext.js","search/SearchResults.js","search/SearchApp.js","search/SearchContainer.js","PositionSidebar.js","SignUpForm.js","NotFound.js","App.js","store/configureStore.js","store/reducers/authentication.js","store/reducers/positions.js","store/reducers/ui.js","store/reducers/current-position.js","store/reducers/current-user.js","store/reducers/watched-stocks.js","store/reducers/current-watched-stock.js","store/reducers/history.js","index.js","leaf-clipart-12-transparent.png"],"names":["imageUrl","process","REACT_APP_IMAGE_URL","baseUrl","REACT_APP_BASEURL","setCurrentUser","id","type","setToken","token","login","email","password","dispatch","a","fetch","method","headers","body","JSON","stringify","response","ok","json","user","window","localStorage","setItem","signUp","PrivateRoute","Component","component","rest","render","props","needLogin","to","ProtectedRoute","LoginPanel","useState","setEmail","setPassword","useDispatch","handleSubmit","e","preventDefault","className","src","leaf","alt","onSubmit","placeholder","value","onChange","target","LogoutButton","onClick","getState","authentication","Authorization","removeItem","polygonApi","baseURL","api","apisauce","create","timeout","params","apiKey","getQuote","symbol","get","load","list","createPosition","data","getPositions","exitPosition","location","replace","historyList","createInstance","getHistoricalData","setCurrent","current","PositionDetail","positions","getOnePosition","stories","setStories","isLoading","setIsLoading","stockChartXValues","setstockChartXValues","stockChartYValues","setstockChartYValues","stockSymbol","setstockSymbol","stockName","setstockName","currentPrice","setcurrentPrice","buyPrice","setbuyPrice","shares","setshares","livedescription","setCompanyDescription","liveimage","setImage","liveexchange","setExchange","soldPrice","setSoldPrice","useParams","useEffect","API_CALL","then","fetchCompanyInfo","fetchPositionNews","stockChartXValuesFunction","stockChartYValuesFunction","key","push","parseFloat","toFixed","fetchLivePositions","CircularProgress","callback","lineChartData","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","handleClick","boughtPrice","upOrDown","start","decimals","end","duration","separator","options","legend","display","elements","point","radius","scales","yAxes","ticks","beginAtZero","xAxes","reverse","createdAt","required","isNaN","map","story","timestamp","href","url","title","summary","height","width","image","PositionDetailContainer","useSelector","state","currentPosition","history","Object","values","watchedList","getWatchedStocks","exitWatchedStock","Title","Typography","variant","color","gutterBottom","children","Orders","rows","setRows","gridRows","instance","date","transaction","deposit","companyName","purchasePrice","percentChange","mapHistoryToRows","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","position","toUpperCase","style","columns","field","headerName","pageSize","checkboxSelection","OrdersContainer","useStyles","makeStyles","depositContext","flex","Deposits","classes","year","Date","getFullYear","month","getMonth","getDate","payload","takeOut","deposits","reduce","accumulator","DepositsContainer","NewsFeed","loading","TopMovers","slice","ticker","price","changes","changesPercentage","TopLosers","UserDetail","sum","parseInt","totalCash","totalAssets","doughnutData","length","responsive","UserDetailContainer","setCurrentWatchedStock","WatchListDetail","watchedStocks","getOneWatchedStock","WatchedStockDetailContainer","currentWatchedStock","SearchContext","createContext","SearchDetail","createWatchedStock","context","useContext","searchQuery","catch","error","console","log","SearchDetailContainer","hideForm","SearchApp","inputValue","setInputValue","setSearchQuery","SearchContainer","Provider","SearchResults","PositionSidebar","formVisible","updatePositionAndGet","flag","setflag","posLen","setPosLen","delay","setTimeout","stockSymbols","m","join","positionId","Number","watchedStock","Math","random","round","exact","path","PositionSidebarContainer","SignUpForm","name","setName","cashValue","setCashValue","confirmPassword","setConfirmPassword","updateProperty","newUser","NotFound","App","loadToken","loaded","setLoaded","AppContainer","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","newState","freeze","merge","ui","currentUser","store","initialState","createStore","applyMiddleware","thunk","configureStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4bc67506.chunk.js","sourcesContent":["export const imageUrl = process.env.REACT_APP_IMAGE_URL || 'http://localhost:8000';\nexport const baseUrl = process.env.REACT_APP_BASEURL || `${imageUrl}/api`;\nexport const POLYGON_URL = \"https://api.polygon.io/\";\nexport const POLYGON_KEY = 'VkrkWBmpkEzcfu554MV9td_zILRqS2w8';","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const setCurrentUser = (id) => ({ type: SET_CURRENT_USER, id });\n\nexport const getOneUser = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrentUser(current));\n  }\n};","import { baseUrl } from \"../../config\";\nimport {setCurrentUser} from './current-user'\nexport const TOKEN_KEY = \"TOKEN_KEY\";\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const REMOVE_TOKEN = \"REMOVE_TOKEN\";\n\nexport const removeToken = (token) => ({ type: REMOVE_TOKEN });\nexport const setToken = (token) => ({ type: SET_TOKEN, token });\n\nexport const loadToken = () => async (dispatch) => {\n  const token = window.localStorage.getItem(TOKEN_KEY);\n  if (token) {\n    dispatch(setToken(token));\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  \n  const response = await fetch(`${baseUrl}/session`, {\n    method: \"put\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (response.ok) {\n    const { token, user: {id}} = await response.json();\n    \n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n    dispatch(setCurrentUser(id));\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/session`, {\n    method: \"delete\",\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (response.ok) {\n    window.localStorage.removeItem(TOKEN_KEY);\n    dispatch(removeToken());\n  }\n};\n\nexport const signUp = (user) => async (dispatch) => {\n  const response = await fetch(`${baseUrl}/users`, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user),\n  });\n  if (response.ok) {\n    const { token } = await response.json();\n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n  }\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      rest.needLogin === true ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      rest.needLogin !== true ? <Redirect to=\"/\" /> : <Component {...props} />\n    }\n  />\n);\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./store/actions/authentication\";\nimport {Link} from 'react-router-dom'; \nimport leaf from './leaf-clipart-12-transparent.png';\n\n\nconst LoginPanel = (props) => {\n  const [email, setEmail] = useState(\"demo@example.com\");\n  const [password, setPassword] = useState(\"password\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n\n  return (\n    <main className=\"centered middled\">\n      <img src={leaf} alt=\"img\" />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={updateEmail}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={updatePassword}\n        />\n        <button type=\"submit\">Login</button>\n        <Link to=\"/signup\">\n     <button type=\"button\">\n     Sign Up\n     </button>\n      </Link>\n      </form>\n    </main>\n  );\n};\n\nexport default LoginPanel;\n","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"./store/actions/authentication\";\nimport {Link} from 'react-router-dom'; \n\n\nconst LogoutButton = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <>\n    \n    <div id=\"logout-button-holder\">\n    <Link to=\"/\">\n          <button type=\"button\">\n          Profile\n          </button>\n        </Link>\n      <button onClick={handleClick}>Logout</button>\n    </div>\n    </>\n    \n  );\n};\n\nexport default LogoutButton;\n","import apisauce from 'apisauce';\n\nimport {POLYGON_URL, POLYGON_KEY} from '../config';\n\nconst polygonApi = (baseURL = POLYGON_URL) => {\n\n    const api = apisauce.create({\n        baseURL,\n        timeout: 5000\n    })\n    const params = {\n        apiKey: POLYGON_KEY\n    } \n    const getQuote = symbol => api.get(`https://api.polygon.io/v1/meta/symbols/${symbol}/news?perpage=10&page=1&apiKey=${params.apiKey}`);\n\n    return {\n        getQuote\n    }\n};\n\nexport default polygonApi;","import { baseUrl } from \"../../config\";\nimport { hideForm } from \"./ui\";\n\nexport const LOAD = \"LOAD\";\nexport const EXIT = 'EXIT';\n\nexport const load = (list) => ({ type: LOAD, list });\n\n\n\nexport const createPosition = (data) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    // dispatch(hideForm());\n    dispatch(getPositions());\n    dispatch(hideForm());\n  }\n};\n\n\n\n\nexport const getPositions = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\n\nexport const exitPosition = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions/${id}`, {\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    dispatch(getPositions());\n    window.location.replace('/')\n  }\n};\n\n\nexport const updatePositionAndGet = (data) => async (dispatch, getState) =>{\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions/update`, {\n    method:\"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const list = await response.json();\n  }\n}","export const HIDE_FORM = \"HIDE_FORM\";\nexport const SHOW_FORM = \"SHOW_FORM\";\n\nexport const showForm = () => ({ type: SHOW_FORM });\nexport const hideForm = () => ({ type: HIDE_FORM });\n","import { baseUrl } from \"../../config\";\n\nexport const LOAD_HISTORY = \"LOAD_HISTORY\";\nexport const load = (historyList) => ({ type: LOAD_HISTORY, historyList });\n\nexport const createInstance = (data) => async (dispatch, getState) => {\n    const {\n      authentication: { token },\n    } = getState();\n    const response = await fetch(`${baseUrl}/history`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(data),\n    });\n  \n    if (response.ok) {\n      \n      dispatch(getHistoricalData());\n    }\n  };\n  \n  \n  \n  \n  export const getHistoricalData = () => async (dispatch, getState) => {\n    const {\n      authentication: { token },\n    } = getState();\n    const response = await fetch(`${baseUrl}/history`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  \n    if (response.ok) {\n      const historyList = await response.json();\n      dispatch(load(historyList));\n    }\n  };","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT = \"SET_CURRENT\";\n\nexport const setCurrent = (current) => ({ type: SET_CURRENT, current });\n\nexport const getOnePosition = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/positions/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrent(current));\n  }\n};\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport polygonApi from './util/polygon';\nimport { Line } from 'react-chartjs-2';\nimport { exitPosition } from \"./store/actions/positions\";\nimport { createPosition } from \"./store/actions/positions\";\nimport { createInstance } from \"./store/actions/history\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CountUp from 'react-countup';\n\n\n\n\nimport { getOnePosition } from \"./store/actions/current-position\";\n\nconst PositionDetail = ({ positions, getOnePosition, createPosition, createInstance }) => {\n  const [stories, setStories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); \n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  const [stockSymbol, setstockSymbol] = useState(\"\");\n  const [stockName, setstockName] = useState(\"\");\n  const [currentPrice, setcurrentPrice] = useState(\"\");\n  const [buyPrice, setbuyPrice] = useState(\"\");\n  const [shares, setshares] = useState(\"\");\n  const [livedescription, setCompanyDescription] = useState('');\n  const [liveimage, setImage] = useState('');\n  const [liveexchange, setExchange] = useState('');\n  const [soldPrice, setSoldPrice] = useState('');\n\n\n\n  \n\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  \n\n  useEffect(() => {\n    getOnePosition(id);\n  }, [id]);\n\n  //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!positions) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let stockSymbol = positions.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setstockName(data[0]['companyName'])\n            setCompanyDescription(data[0]['description'])\n            setExchange(data[0]['exchangeShortName'])\n            setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [positions]);\n  //polygon news fetch -------------------------------------------------------------\n  useEffect(() => {\n    if (!positions) {\n      return;\n    }\n    const fetchPositionNews = async () =>{\n      const polygon = polygonApi()\n      polygon.getQuote(positions.stockSymbol).then((response) => {\n      \n      \n        if(response.ok){\n          setStories(response.data)\n        }\n      });\n    }\n    fetchPositionNews();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [positions]);\n //alphavantage stock fetch -------------------------------------------------------------\n useEffect(() => {\n  if (!positions) {\n    return;\n  }\n  const fetchLivePositions = async () =>{\n    \n    const API_Key = process.env.REACT_APP_FMP_API_KEY;\n    let stockSymbol = positions.stockSymbol\n    let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n    \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n           \n              // setVolume(data['Time Series (5min)'][0][\"5. volume\"]);\n              setstockSymbol(positions.stockSymbol);\n              for(let key in data){\n                  stockChartXValuesFunction.push(data[key]['date']);\n                  stockChartYValuesFunction.push(data[key]['open']);\n              }\n              setIsLoading(false);\n\n              setstockChartXValues(stockChartXValuesFunction)\n              setstockChartYValues(stockChartYValuesFunction)\n              setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n              setSoldPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n          }\n      )\n        }\n    fetchLivePositions();\n  \n\n}, [positions]);\n\n\n\n  if (!positions) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n    <>\n    \n    <main className=\"centered middled\">\n      <b>Fetching market data...</b>\n      <CircularProgress />\n      </main>\n    </>\n    )\n  }\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: positions.stockSymbol,\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n        borderWidth: 4,\n        \n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n        ticks: {\n          reverse: true,\n        }\n    }]\n    },\n  }\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n\n   \n    const payload = {\n      stockSymbol,\n      stockName,\n      currentPrice,\n      buyPrice,\n      shares,\n      \n    };\n    createPosition(payload);\n  };\n\n  const handleClick = async (e) => {\n    \n    const boughtPrice = positions.buyPrice\n    \n    const shares = positions.shares\n   \n    \n    const payload ={\n    stockSymbol,\n    stockName,\n    soldPrice,\n    boughtPrice,\n    shares\n    };\n    createInstance(payload);\n    dispatch(exitPosition(positions.id));\n\n    \n    \n  }\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const upOrDown = stockChartYValues[0] > stockChartYValues[399] ? 'background' : 'background2'\nreturn (\n    <div className=\"pokemon-detail\">\n      <div className={`pokemon-detail-image-${upOrDown}`}>\n        \n        <div className='header-element'>\n          <div className='company-logo'>\n        <img src={liveimage} alt=\"Company Logo\" />\n        </div>\n        <div className='company-titles'>\n        <h1 className=\"bigger\">{positions.stockSymbol}</h1>\n        <h1 className=\"bigger\">{stockName}</h1>\n        <h1 className=\"bigger\">\n        $<CountUp start={0} decimals={2} end={currentPrice} duration={1.00} separator=\",\" />\n          </h1>\n        </div>\n        </div>\n      </div>\n      <div className=\"pokemon-detail-lists\">\n      \n        <div>\n        <Line data={lineChartData} options={options} />\n          \n        </div>\n        <div>\n          <h2>Your Position</h2>\n            <ul>\n              <li>\n                <b>Shares:</b> {positions.shares}\n              </li>\n              <li>\n                <b>Average Cost:</b> ${positions.buyPrice}\n              </li>\n              <li>\n                <b>Date Purchased:</b> {positions.createdAt}\n              </li>\n              <li>\n                <b>Market Value:</b> ${(positions.shares*currentPrice).toFixed(2)}\n              </li>\n              <li>\n                <b>Total Return:</b> ${(positions.shares*currentPrice-positions.shares*positions.buyPrice).toFixed(2)}\n              </li>\n            </ul>\n            <h2>Buy More</h2>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        \n        <button type=\"submit\">Buy Shares!</button>}\n        \n        </form>\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n            <button onClick={handleClick} >Exit Position</button>}\n            \n    \n        </div>\n      </div>\n      <div className='newsFeed'>\n      <h2>Stock Information</h2>\n          <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            <li>\n              <b>Company Description</b> {livedescription}\n            </li>\n            \n            \n          </ul>\n          <h2>News</h2>\n          {stories.map(story => {\n              return (\n                <div className='newsContainer' key={story.timestamp}>\n                    <div className='newsTitle'>\n                      \n                      <a className='newsLink' href={story.url}>{story.title}</a>\n                    </div>\n                    <div className='newsSummary'>\n                    {story.summary}\n                    </div>\n                     <img height='100%' width='100%' src={story.image} alt='news'></img>\n                 </div>\n              )\n            })}\n          </div>\n    </div>\n  );\n};\n\nconst PositionDetailContainer = () => {\n  const positions = useSelector((state) => state.positions[state.currentPosition]);\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n\n  return (\n\n    <PositionDetail\n    positions={positions}\n    history = {history}\n      getOnePosition={(id) => dispatch(getOnePosition(id))}\n      exitPosition={(id) => dispatch(exitPosition(id))}\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      createInstance={(history) => dispatch(createInstance(history))}\n    />\n  \n  );\n};\n\nexport default PositionDetailContainer;\n","import { baseUrl } from \"../../config\";\n\nexport const LOAD_WATCHED = \"LOAD_WATCHED\";\nexport const EXIT_WATCHED = 'EXIT_WATCHED';\n\nexport const load = (watchedList) => ({ type: LOAD_WATCHED, watchedList });\n\n\n\nexport const createWatchedStock = (data) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    dispatch(getWatchedStocks());\n  }\n};\n\n\n\n\nexport const getWatchedStocks = () => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const watchedList = await response.json();\n    dispatch(load(watchedList));\n  } \n};\n\nexport const exitWatchedStock = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist/${id}`, {\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    dispatch(getWatchedStocks());\n    window.location.replace('/')\n  }\n};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useEffect, useState }  from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport { getPositions } from \"../store/actions/positions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getHistoricalData} from '../store/actions/history';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\n\n\n\n\n\n\n\n\nconst Orders = ({positions, history, getPositions, getHistoricalData}) => {\nconst [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n  \n\n  useEffect(() => {\n    if (!history) {\n      return;\n    }\n\n const  mapHistoryToRows = () => {\n    const gridRows = history.map((instance) => {\n      return ({\n        id: instance.id,\n        date: instance.createdAt, \n        transaction: instance.deposit > 0 ? 'DEPOSIT: $'+ instance.deposit : (instance.shares !== 0 ?\n          'SELL' : 'WITHDRAWAL: $'+ instance.deposit),\n        symbol: instance.stockSymbol ? instance.stockSymbol : '',\n        companyName: instance.stockName,\n        shares: instance.shares,\n        purchasePrice: instance.boughtPrice,\n        currentPrice: instance.soldPrice,\n        percentChange: ((instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares)).toFixed(2)\n      })\n\n    })\n    setRows(gridRows);\n  }\n  mapHistoryToRows();\n\n  }, [history]); \n\n  const columns = [\n    { field: 'date', headerName: 'Date', width: 130 },\n    { field: 'transaction', headerName: 'Transaction', width: 130 },\n    { field: 'symbol', headerName: 'Symbol', width: 90 },\n    { field: 'companyName', headerName: 'Company Name', width: 130 },\n    {\n      field: 'shares',\n      headerName: 'Shares',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'purchasePrice',\n      headerName: 'Purchase Price',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'currentPrice',\n      headerName: 'Sell Price',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'percentChange',\n      headerName: 'Profit',\n      type: 'number',\n      width: 130,\n    },\n    \n  ];\n  return (\n    <React.Fragment>\n      <Title>Portfolio Assets</Title>\n      <Table size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell>Purchase Date</TableCell>\n            <TableCell>Symbol</TableCell>\n            <TableCell>Company Name</TableCell>\n            <TableCell>Shares</TableCell>\n            <TableCell>Purchase Price</TableCell>\n            <TableCell>Current Price $</TableCell>\n            <TableCell align=\"right\">Total Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {positions.map((position) => (\n            <TableRow key={position.id}>\n              <TableCell>{position.createdAt}</TableCell>\n              <TableCell>{position.stockSymbol.toUpperCase()}</TableCell>\n              <TableCell>{position.stockName}</TableCell>\n              <TableCell>{position.shares}</TableCell>\n              <TableCell>${position.buyPrice}</TableCell>\n              <TableCell >{`$${position.currentPrice}`}</TableCell>\n          <TableCell align=\"right\">${(position.shares * position.currentPrice).toFixed(2)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Title>Portfolio History</Title>\n   \n      <div style={{ height: 1000, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={20} checkboxSelection />\n    </div>\n  \n    </React.Fragment>\n  );\n}\n\n\nconst OrdersContainer = () => {\n  const positions = useSelector((state) => Object.values(state.positions));\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <Orders\n      positions={positions}\n      history={history}\n      getPositions={() => dispatch(getPositions())}\n      getHistoricalData={() => dispatch(getHistoricalData())}\n      \n    />\n  );\n};\n\nexport default OrdersContainer;","import React, { useEffect }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CountUp from 'react-countup';\nimport Title from './Title';\nimport {getHistoricalData} from '../store/actions/history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createInstance } from \"../store/actions/history\";\n\n\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport function Deposits({getHistoricalData, history}) {\n  const classes = useStyles();\n  const year = new Date().getFullYear();\n  const month =new Date().getMonth()+1;\n  const date = new Date().getDate()\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n\n  const handleClick = async (e) => {\n    const deposit = 10000;\n    \n    const payload ={\n    deposit\n    };\n    await dispatch(createInstance(payload));\n  }\n\n  const takeOut = async (e) => {\n    const deposit = -10000;\n    \n    const payload ={\n    deposit\n    };\n    await dispatch(createInstance(payload));\n  }\n\n  const deposits = (history.reduce(function (accumulator, instance){\n    return accumulator +  parseFloat(instance.deposit);\n  }, 0)).toFixed(2);\n  return (\n    <React.Fragment>\n      <div className= 'userHeader'>\n      <Title>Portfolio Value</Title>\n      <Typography component=\"p\" variant=\"h4\">\n      $<CountUp start={0} decimals={2} end={(history.reduce(function (accumulator, instance){\n          return accumulator + (instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares);\n        }, parseFloat(deposits))).toFixed(2)} duration={1.00} separator=\",\" />\n        \n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {month + '/' + date + '/' + year}\n      </Typography>\n      <div>\n        <button onClick={handleClick} >Deposit $10000</button>\n        <button onClick={takeOut} >Withdrawal $10000</button>\n      </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst DepositsContainer = () => {\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <Deposits\n      history={history}\n      getHistoricalData={() => dispatch(getHistoricalData())}\n      \n    />\n  );\n};\n\nexport default DepositsContainer;\n","import React, { useEffect, useState } from \"react\";\nimport polygonApi from './util/polygon';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst NewsFeed = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    useEffect(() => {\n        const fetchPositionNews = async () =>{\n          const polygon = polygonApi()\n          polygon.getQuote('SPY').then((response) => {\n          \n          \n            if(response.ok){\n                setIsLoading(false);\n              setStories(response.data)\n            }\n          });\n        }\n        fetchPositionNews();  \n        //setinterval would go here return the clear interval\n        //return ()=> clearInterval\n      }, []); \n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2>News</h2>\n        {loading}\n        {stories === [] ? 'You have reached your news fetch limit, try again later.' :\n        <div> \n        {stories.map(story => {\n            return (\n              <div className='newsContainer' key={story.timestamp}>\n                  <div className='newsTitle'>\n                    \n                    <a className='newsLink' href={story.url}>{story.title}</a>\n                  </div>\n                  <div className='newsSummary'>\n                  {story.summary}\n                  </div>\n                   <img height='100%' width='100%' src={story.image} alt='news'></img>\n               </div>\n            )\n          })}\n          </div>}\n        </div>\n      )\n}\n\n\n\nexport default NewsFeed;","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TopMovers = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    //  financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    \n    const fetchCompanyInfo = async () =>{\n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let API_CALL = `https://financialmodelingprep.com/api/v3/gainers?apikey=${API_Key}`;\n    //   let stockChartXValuesFunction = [];\n    //   let stockChartYValuesFunction = [];\n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setIsLoading(false)\n            setStories(data)\n            // for(let key in data){\n            //   stockChartXValuesFunction.push(key);\n            //   stockChartYValuesFunction.push(data[key]['ticker']);\n            // }\n            //   console.log(stockChartXValuesFunction[0][companyName]);\n            //   console.log(stockChartYValuesFunction);\n            // setCompanyDescription(data[0]['description'])\n            // setExchange(data[0]['exchangeShortName'])\n            // setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, []);\n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2 style={{color: 'green'}}>Top Gainers</h2>\n        {loading}\n        {stories.slice(0, 5).map(story => {\n            return (\n              <div className='moversContainer' key={story.ticker}>\n                  <div className='newsTitle'>\n                  {story.ticker}\n                  <div>\n                  {story.companyName}\n                  </div>\n                   \n                  </div>\n                  <div className='newsSummary'>\n                  \n                  {story.price} +{story.changes}  <span style={{color: 'green'}} >{story.changesPercentage}</span>\n\n                  </div>\n                   \n               </div>\n            )\n          })}\n        </div>\n      )\n}\n\nexport default TopMovers;","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TopLosers = props => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setIsLoading] = useState(true); \n    \n    //  financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    \n    const fetchCompanyInfo = async () =>{\n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let API_CALL = `https://financialmodelingprep.com/api/v3/losers?limit=10&apikey=${API_Key}`;\n    //   let stockChartXValuesFunction = [];\n    //   let stockChartYValuesFunction = [];\n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            setIsLoading(false)\n            setStories(data)\n            // for(let key in data){\n            //   stockChartXValuesFunction.push(key);\n            //   stockChartYValuesFunction.push(data[key]['ticker']);\n            // }\n            //   console.log(stockChartXValuesFunction[0][companyName]);\n            //   console.log(stockChartYValuesFunction);\n            // setCompanyDescription(data[0]['description'])\n            // setExchange(data[0]['exchangeShortName'])\n            // setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, []);\n      const loading = () => {\n        if (isLoading) {\n        return (\n        <>\n        \n        <main className=\"centered middled\">\n          <b>Fetching market data...</b>\n          <CircularProgress />\n          </main>\n        </>\n        )\n      }\n    }\n\n      return (\n        <div>\n        <h2 style={{color: 'red'}}>Top Losers</h2>\n        {loading}\n        {stories.slice(0, 5).map(story => {\n            return (\n              <div className='moversContainer' key={story.ticker}>\n                  <div className='newsTitle'>\n                  {story.ticker}\n                  <div>\n                  {story.companyName}\n                  </div>\n                   \n                  </div>\n                  <div className='newsSummary'>\n                  \n                  {story.price} {story.changes}  <span style={{color: 'red'}} >{story.changesPercentage}</span>\n                  </div>\n                   \n               </div>\n            )\n          })}\n        </div>\n      )\n}\n\nexport default TopLosers;","import React, { useEffect, useState }  from 'react';\n\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport Orders from './dashboard/Orders'\nimport Deposits from './dashboard/Deposits'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getHistoricalData} from './store/actions/history';\nimport { getPositions } from \"./store/actions/positions\";\nimport NewsFeed from './NewsFeed';\nimport TopMovers from './TopMovers';\nimport TopLosers from './TopLosers';\n\n\n\nconst UserDetail = ({getHistoricalData, history, positions, getPositions}) => {\n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  \n  useEffect(() => {\n    getPositions();\n  }, []);\n\n  useEffect(() => {\n    getHistoricalData();\n  }, []);\n\n \n  useEffect(() => {\n    if (!history) {\n      return;\n    }\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    let sum = 0;\n    const fetchLivePositions = async () =>{\n      \n        \n        history.map((instance) => {\n          \n          stockChartYValuesFunction.push(sum+= parseInt(instance.deposit) + (parseInt(instance.soldPrice)*parseInt(instance.shares))-(parseInt(instance.boughtPrice)*parseInt(instance.shares)))\n          stockChartXValuesFunction.push(instance.createdAt)\n        })\n    \n        }\n              \n  \n        setstockChartXValues(stockChartXValuesFunction)\n        setstockChartYValues(stockChartYValuesFunction)\n        // console.log(stockChartXValues)\n        // console.log(stockChartYValues)\n            \n        \n      \n      fetchLivePositions();\n    \n  \n  }, [history]);\n  const deposits = (history.reduce(function (accumulator, instance){\n    return accumulator +  parseFloat(instance.deposit);\n  }, 0)).toFixed(2);\n\n  const totalCash = (history.reduce(function (accumulator, instance){\n    return accumulator + (instance.soldPrice*instance.shares)-(instance.boughtPrice*instance.shares);\n  }, parseFloat(deposits))).toFixed(2);\n\n  const totalAssets = (positions.reduce(function (accumulator, position){\n    return accumulator + (position.currentPrice*position.shares);\n  }, 0)).toFixed(2);\n\n  const doughnutData = {\n    datasets: [{\n        data: [totalCash - totalAssets, totalAssets],\n        backgroundColor: [\n          totalCash - totalAssets > 0 ? 'green' : 'red',\n          'orange',\n        ],\n        borderColor: [\n          totalCash - totalAssets > 0 ? 'green' : 'red',\n          'orange',\n        ],\n        borderWidth: 5,\n    }],\n    \n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n    labels: [\n        'Cash',\n        'Assets'\n    ],\n    \n};\n\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: 'Portfolio Value',\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] < stockChartYValues[stockChartYValues.length-1] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] < stockChartYValues[stockChartYValues.length-1] ? 'green' : 'red',\n        \n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n    }]\n    },\n  }\n\n  const pieOptions= {\n    //cutoutPercentage: 40,\n   responsive: true,\n }\n\nreturn (\n  <div className=\"pokemon-detail\">\n    <div\n      className={`pokemon-detail-image-background`}>\n      <div>\n      <h1 className=\"bigger\">Welcome to Algo</h1>\n      </div>\n      \n    </div>\n    \n    <div>\n    <Deposits />\n    \n    </div>\n    <div className=\"user-detail\">\n      <div className=\"user-detail-chart\">\n        <Line data={lineChartData} options={options} />\n      </div>\n      <div className='doughnut'>\n        <Doughnut data={doughnutData} options={pieOptions} />\n      </div>\n      <div className='user-data-tables'>\n         <Orders />\n      </div>\n      \n      <div className='infoGrid__userNews'>\n      <NewsFeed />\n      </div>\n      <div className='infogrid__movers'>\n      <TopMovers />\n      <TopLosers />\n      </div>\n    \n      \n      \n    </div>\n  </div>\n);\n \n  };\n\n  \n\n  const UserDetailContainer = () => {\n    const positions = useSelector((state) => Object.values(state.positions));\n    const history = useSelector((state) => Object.values(state.history));\n    const dispatch = useDispatch();\n    return (\n      <UserDetail\n        history={history}\n        positions={positions}\n        getPositions={() => dispatch(getPositions())}\n        getHistoricalData={() => dispatch(getHistoricalData())}\n        \n      />\n    );\n  };\n  \n  export default UserDetailContainer;","import { baseUrl } from \"../../config\";\n\nexport const SET_CURRENT_WATCHED_STOCK = \"SET_CURRENT_WATCHED_STOCK\";\n\nexport const setCurrentWatchedStock = (current) => ({ type: SET_CURRENT_WATCHED_STOCK, current });\n\nexport const getOneWatchedStock = (id) => async (dispatch, getState) => {\n  const {\n    authentication: { token },\n  } = getState();\n  const response = await fetch(`${baseUrl}/watchlist/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (response.ok) {\n    const current = await response.json();\n    dispatch(setCurrentWatchedStock(current));\n  }\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport polygonApi from './util/polygon';\nimport { Line } from 'react-chartjs-2';\nimport { createPosition } from \"./store/actions/positions\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getOneWatchedStock} from \"./store/actions/current-watched-stock\";\nimport CountUp from 'react-countup';\n\n\n\n\nconst WatchListDetail = ({watchedStocks, getOneWatchedStock, createPosition}) => {\n  const [stories, setStories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); \n  const [stockChartXValues, setstockChartXValues] = useState([]);\n  const [stockChartYValues, setstockChartYValues] = useState([]);\n  const [stockSymbol, setstockSymbol] = useState(\"\");\n  const [stockName, setstockName] = useState(\"\");\n  const [currentPrice, setcurrentPrice] = useState(\"\");\n  const [buyPrice, setbuyPrice] = useState(\"\");\n  const [shares, setshares] = useState(\"\");\n  const [livedescription, setCompanyDescription] = useState('');\n  const [liveimage, setImage] = useState('');\n  const [liveexchange, setExchange] = useState('');\n\n  // setstockName(data[0][companyName])\n  //           setCompanyDescription(data[0][description])\n  //           setExchange(data[0][exchangeShortName])\n  //           setImage(data[0][image])\n\n  \n\n  const { id } = useParams();\n \n\n  // useEffect(() => {\n  //   createInstance(id);\n  // }, [id]);\n  \n\n  useEffect(() => {\n    getOneWatchedStock(id);\n  }, [id]);\n\n  //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!watchedStocks) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let stockSymbol = watchedStocks.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n          \n            setstockName(data[0]['companyName'])\n            setCompanyDescription(data[0]['description'])\n            setExchange(data[0]['exchangeShortName'])\n            setImage(data[0]['image'])\n              \n          }\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [watchedStocks]);\n  //polygon news fetch -------------------------------------------------------------\n  useEffect(() => {\n    if (!watchedStocks) {\n      return;\n    }\n    const fetchPositionNews = async () =>{\n      const polygon = polygonApi()\n      polygon.getQuote(watchedStocks.stockSymbol).then((response) => {\n      \n        if(response.ok){\n          setStories(response.data)\n        }\n      });\n    }\n    fetchPositionNews();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [watchedStocks]);\n //alphavantage stock fetch -------------------------------------------------------------\n useEffect(() => {\n  if (!watchedStocks) {\n    return;\n  }\n  const fetchLivePositions = async () =>{\n    \n    const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let stockSymbol = watchedStocks.stockSymbol\n      let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n    \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n            // console.log('FMP Historical data Search')\n            //   console.log(data)\n              // setVolume(data['Time Series (5min)'][0][\"5. volume\"]);\n              setstockSymbol(watchedStocks.stockSymbol);\n              for(let key in data){\n                  stockChartXValuesFunction.push(data[key]['date']);\n                  stockChartYValuesFunction.push(data[key]['open']);\n              }\n              setIsLoading(false);\n              \n              setstockChartXValues(stockChartXValuesFunction)\n              setstockChartYValues(stockChartYValuesFunction)\n              setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n              setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n            \n          }\n      )\n        }\n    fetchLivePositions();\n  \n\n}, [watchedStocks]);\n\n  if (!watchedStocks) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n    <>\n    \n    <main className=\"centered middled\">\n      <b>Fetching market data...</b>\n      <CircularProgress />\n      </main>\n    </>\n    )\n  }\n  const lineChartData = {\n    labels: stockChartXValues,\n    datasets: [\n      {\n        label: watchedStocks.stockSymbol,\n        data: stockChartYValues,\n        fill: false,\n        backgroundColor:stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n        // borderColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n        borderWidth: 4\n      },\n    ],\n  }\n  \n  const options = {\n    legend: {\n      display: true,\n    },\n    elements: {\n      point:{\n          radius: 0\n      }\n  },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n        },\n      ],\n      xAxes: [{\n        display: false,\n        ticks: {\n          reverse: true,\n        }\n    }]\n    },\n  }\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n  \n    const payload = {\n      stockSymbol,\n      stockName,\n      currentPrice,\n      buyPrice,\n      shares,\n      \n    };\n    createPosition(payload);\n  };\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const upOrDown = stockChartYValues[0] > stockChartYValues[399] ? 'background' : 'background2'\nreturn (\n    <div className=\"pokemon-detail\">\n\n    <div className={`pokemon-detail-image-${upOrDown}`}>\n        \n        <div className='header-element'>\n          <div className='company-logo'>\n        <img src={liveimage} alt=\"Company Logo\" />\n        </div>\n        <div className='company-titles'>\n        <h1 className=\"bigger\">{watchedStocks.stockSymbol}</h1>\n        <h1 className=\"bigger\">{stockName}</h1>\n        <h1 className=\"bigger\">\n        $<CountUp start={0} decimals={2} end={currentPrice} duration={1.00} separator=\",\" />\n\n        </h1>\n        </div>\n        </div>\n      </div>\n      <div className=\"pokemon-detail-lists\">\n      \n        <div>\n        <Line data={lineChartData} options={options} />\n          \n        </div>\n        <div>\n          \n            <h2>Buy</h2>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        <button type=\"submit\">Buy Shares!</button>}\n        \n      </form>\n              \n    \n        </div>\n      </div>\n      <div className='newsFeed'>\n      <h2>Stock Information</h2>\n          <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            <li>\n              <b>Company Description</b> {livedescription}\n            </li>\n            \n            \n          </ul>\n          <h2>News</h2>\n          {stories.map(story => {\n              return (\n                <div className='newsContainer' key={story.timestamp}>\n                    <div className='newsTitle'>\n                      \n                      <a className='newsLink' alt='news' href={story.url}>{story.title}</a>\n                    </div>\n                    <div className='newsSummary'>\n                    {story.summary}\n                    </div>\n                     <img height='100%' width='100%' src={story.image}></img>\n                 </div>\n              )\n            })}\n          </div>\n\n    </div>\n  );\n};\n  \n  const WatchedStockDetailContainer = () => {\n    const positions = useSelector((state) => state.positions[state.currentPosition]);\n    const dispatch = useDispatch();\n    const watchedStocks = useSelector((state) => state.watchedStocks[state.currentWatchedStock]);\n  \n    return (\n  \n      <WatchListDetail\n      watchedStocks ={watchedStocks}\n      positions = {positions}\n      getOneWatchedStock={(id) => dispatch(getOneWatchedStock(id))}\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      />\n    \n    );\n  };\n  \n  export default WatchedStockDetailContainer;","import { createContext } from 'react';\n\nexport const SearchContext = createContext();","import React, { useState, useEffect, useContext } from 'react';\nimport { SearchContext } from './SearchContext';\n\nimport { useDispatch } from \"react-redux\";\n\nimport { Line } from 'react-chartjs-2';\nimport { createPosition } from \"../store/actions/positions\";\nimport { createWatchedStock } from \"../store/actions/watched-stocks\";\nimport { hideForm } from \"../store/actions/ui\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\n\nconst SearchDetail = ({createPosition, createWatchedStock}) => {\n   const context = useContext(SearchContext);\n   const [isLoading, setIsLoading] = useState(true); \n   const [stockChartXValues, setstockChartXValues] = useState([]);\n   const [stockChartYValues, setstockChartYValues] = useState([]);\n   const [stockSymbol, setstockSymbol] = useState(\"\");\n   const [stockName, setstockName] = useState(\"\");\n   const [currentPrice, setcurrentPrice] = useState(\"\");\n   const [buyPrice, setbuyPrice] = useState(\"\");\n   const [shares, setshares] = useState(\"\");\n   const [liveexchange, setExchange] = useState('');\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n    console.log(stockSymbol)\n    console.log(stockName)\n    console.log(currentPrice)\n    console.log(buyPrice)\n    console.log(shares)\n      const payload = {\n        stockSymbol,\n        stockName,\n        currentPrice,\n        buyPrice,\n        shares,\n        \n      };\n      createPosition(payload);\n    };\n\n    const handleClick= (e) =>{    \n      e.preventDefault();    \n      const payload = {\n        stockSymbol,\n        stockName,\n        currentPrice,\n        \n      };\n      createWatchedStock(payload);\n    \n    }\n\n\n    \n    const updateProperty = (callback) => (e) => {\n      callback(e.target.value);\n    };\n     //financial modeling prep fetch---------------------------------------------------\n  useEffect(() => {\n    if (!context.searchQuery) {\n      return;\n    }\n    const fetchCompanyInfo = async () =>{\n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let stockSymbol = context.searchQuery\n      let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbol}?apikey=${API_Key}`;\n     \n    \n      fetch(API_CALL)\n      .then(\n          function(response){\n              return response.json()\n          }\n      )\n      .then(\n          function(data){\n           \n            setstockName(data[0]['companyName'])\n            setstockSymbol(stockSymbol)\n            setExchange(data[0]['exchangeShortName'])\n              \n          }\n      ).catch(error => \n        setstockSymbol('INVALID SYMBOL')\n      )\n    }\n    fetchCompanyInfo();  \n    //setinterval would go here return the clear interval\n    //return ()=> clearInterval\n  }, [context.searchQuery]);\n   //alphavantage stock fetch -------------------------------------------------------------\n   useEffect(() => {\n    if (!context.searchQuery) {\n      return;\n    }\n    const fetchLivePositions = async () =>{\n      \n      const API_Key = process.env.REACT_APP_FMP_API_KEY;\n      let stockSymbol = context.searchQuery\n      let API_CALL = `https://financialmodelingprep.com/api/v3/historical-chart/5min/${stockSymbol}?apikey=${API_Key}`;\n      let stockChartXValuesFunction = [];\n      let stockChartYValuesFunction = [];\n      \n      \n        fetch(API_CALL)\n        .then(\n            function(response){\n                return response.json()\n            }\n        ).catch(error =>  \n          setstockSymbol('INVALID SYMBOL')\n        )\n        .then(\n            function(data){\n            \n    \n                for(let key in data){\n                    stockChartXValuesFunction.push(data[key]['date']);\n                    stockChartYValuesFunction.push(data[key]['open']);\n                }\n                setIsLoading(false);\n                setstockChartXValues(stockChartXValuesFunction)\n                setstockChartYValues(stockChartYValuesFunction)\n                setcurrentPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n                setbuyPrice(parseFloat(stockChartYValues[0]).toFixed(2))\n                \n            }\n        );\n          }\n      fetchLivePositions();\n    \n  \n  }, [context.searchQuery]);\n  \n    if (!context.searchQuery) {\n      return null;\n    }\n    if (isLoading) {\n      return (\n      <>\n      \n      <main >\n       \n        <CircularProgress />\n        </main>\n      </>\n      )\n    }\n  \n    const lineChartData = {\n      labels: stockChartXValues,\n      datasets: [\n        {\n          label: context.searchQuery,\n          data: stockChartYValues,\n          fill: false,\n          backgroundColor:stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n          // borderColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: stockChartYValues[0] > stockChartYValues[399] ? 'green' : 'red',\n          borderWidth: 4\n        },\n      ],\n    }\n    \n    const options = {\n      elements: {\n        point:{\n            radius: 0\n        }\n    },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: false,\n            },\n          },\n        ],\n        xAxes: [{\n          display: false,\n          ticks: {\n            reverse: true,\n          }\n      }]\n      },\n    }\n   \n  return (\n      <div className=\"pokemon-detail\">\n        \n        \n          <Line data={lineChartData} options={options} />\n          {stockSymbol !== 'INVALID SYMBOL' ? \n        <div className=\"pokemon-detail-lists\">\n          <div>\n            <h4>Stock Information</h4>\n            <ul>\n            <li>\n              <b>Symbol</b> {stockSymbol}\n            </li>\n            <li>\n              <b>Stock Name</b> {stockName}\n            </li>\n            <li>\n              <b>Current Price</b> ${parseFloat(stockChartYValues[0]).toFixed(2)}\n            </li>\n            <li>\n              <b>Exchange</b> {liveexchange}\n            </li>\n            {/* <li>\n              <b>Company Description</b> {livedescription}\n            </li> */}\n            \n            \n          </ul>\n          </div>\n            <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          placeholder=\"Shares\"\n          required\n          value={shares}\n          onChange={updateProperty(setshares)}\n        />\n        { isNaN(currentPrice) ? 'Failed to fetch current price' :\n        <button type=\"submit\">Buy Shares!</button>}\n        <button onClick={handleClick} >Add to Watchlist</button>\n      </form>\n        </div>\n        :\n        <div className=\"centered middled\">\n          <b>Invalid symbol. Try again.</b>\n          </div>\n        }  \n        {/* <div className='newsFeed'>\n            {stories.map(story => {\n                return (\n                  <div className='newsContainer' key={story.timestamp}>\n                      <div className='newsTitle'>\n                        \n                        <a className='newsLink' target=\"_blank\" href={story.url}>{story.title}</a>\n                      </div>\n                      <div className='newsSummary'>\n                      {story.summary}\n                      </div>\n                       <img height='100%' width='100%' src={story.image}></img>\n                   </div>\n                )\n              })}\n            </div> */}\n      </div>\n    );\n  };\n  \n  const SearchDetailContainer = () => {\n    const dispatch = useDispatch();\n  \n    return (\n  \n      <SearchDetail\n      createPosition={(positions) => dispatch(createPosition(positions))}\n      createWatchedStock={(watchedStocks) => dispatch(createWatchedStock(watchedStocks))}\n      hideForm={() => dispatch(hideForm())}\n      />\n    \n    );\n  };\n  \n  export default SearchDetailContainer;","import React,{useContext, useState} from 'react';\nimport { SearchContext } from './SearchContext';\n\nconst SearchApp = () => {\n\n  const context = useContext(SearchContext);\n  const [inputValue, setInputValue] = useState('');\n\n  const updateInputVal = e => {\n    setInputValue(e.target.value.toUpperCase());\n  };\n\n  const searchForStock = e => {\n    e.preventDefault();\n    context.setSearchQuery(inputValue);\n  };\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={searchForStock} className=\"search-form\">\n        <input className=\"search-bar\" placeholder=\"Search Stock Symbol\" type=\"text\" value={inputValue} onChange={updateInputVal} />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchApp;\n","import React, { useState } from 'react';\nimport { SearchContext } from './SearchContext';\nimport SearchResults from './SearchResults';\nimport SearchApp from './SearchApp';\n\nconst SearchContainer = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <SearchContext.Provider value={{ searchQuery, setSearchQuery }}>\n      <SearchResults />\n      <SearchApp />\n    </SearchContext.Provider>\n  );\n};\n\nexport default SearchContainer;","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink, Route, Switch, useParams } from \"react-router-dom\";\n\nimport LogoutButton from \"./LogoutButton\";\nimport PositionDetail from \"./PositionDetail\";\n\nimport { getPositions, updatePositionAndGet } from \"./store/actions/positions\";\nimport {getWatchedStocks} from './store/actions/watched-stocks'\nimport {getHistoricalData} from './store/actions/history'\nimport UserDetail from './UserDetail';\nimport WatchListDetail from './WatchListDetail';\nimport { exitWatchedStock } from './store/actions/watched-stocks'\n\n\nimport SearchContainer from \"./search/SearchContainer\";\n\nconst PositionSidebar = ({ positions, formVisible, watchedStocks, updatePositionAndGet }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPositions())\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getWatchedStocks());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getHistoricalData());\n  }, [dispatch]);\n\n  //updatepositions =================================================================================\n  const [flag, setflag] = useState(0)\n  const [posLen,setPosLen ] = useState(0)\n  useEffect(()=>{\n     if(posLen !== positions.length){\n\n      const delay=()=>{\n        setTimeout(()=>{\n          delay()\n          const API_Key = process.env.REACT_APP_FMP_API_KEY;\n          let stockSymbols = positions.map(m=>{return m.stockSymbol}).join(',')\n          let API_CALL = `https://financialmodelingprep.com/api/v3/profile/${stockSymbols}?apikey=${API_Key}`;\n          fetch(API_CALL)\n          .then((response)=>{\n            return response.json()\n          }).then((data)=>{\n            data.map(m=>{\n              return updatePositionAndGet({\n                stockSymbol:m.symbol,\n                currentPrice:m.price\n              })\n            })\n            \n            getPositions();\n          })  \n        },100000)\n      }\n      delay()\n      setPosLen(positions.length);\n    }\n  },[positions,posLen])\n  useEffect(() => {\n    \n    \n    if(positions.length===0 && flag===0){\n      setflag(1)\n      getPositions();\n    }\n  },[positions.length, flag, getPositions]);\n\n  \n\n  const { id } = useParams();\n  const positionId = Number.parseInt(id);\n\n  if (!positions) {\n    return null;\n  }\n\n  if (!watchedStocks) {\n    return null;\n  }\n  return (\n    <main>\n      <LogoutButton />\n      \n          \n      <nav>\n        <Switch>\n      <SearchContainer />\n      \n      \n          </Switch>\n       \n        <div className='sidebar-label'>Stocks</div>\n        {positions.map((position) => {\n          return (\n            <NavLink key={position.id} to={`/position/${position.id}`}>\n              <div\n                className={\n                  positionId === position.id\n                    ? \"nav-entry is-selected\"\n                    : \"nav-entry\"\n                }\n              >\n                <div className='randomizer' \n                  >{parseFloat(100*(position.currentPrice - position.buyPrice)/position.buyPrice).toFixed(2)}%</div>\n                <div>\n                  <div className=\"primary-text\">{position.stockName}</div>\n                  <div className=\"secondary-text\">\n                  {position.shares} share{ position.shares===1 ? '' : 's'} at ${position.currentPrice}     \n                  </div>\n\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n        <div className='sidebar-label'>Watchlist</div>\n        {watchedStocks.map((watchedStock) => {\n          return (\n            <NavLink key={watchedStock.id} to={`/watchlist/${watchedStock.id}`}>\n              <div\n                className={\n                  positionId === watchedStock.id\n                    ? \"nav-entry is-selected\"\n                    : \"nav-entry\"\n                }\n              >\n                <div className='randomizer'\n                  >{((Math.random() * 3.00) + 1).toFixed(2) *(Math.round(Math.random()) * 2 - 1)}%</div>\n                <div>\n                  <div className=\"primary-text\">{watchedStock.stockName}</div>\n                  <div className=\"secondary-text\">\n                  <span onClick={async ()=> await dispatch(exitWatchedStock(watchedStock.id))} >Delete</span>\n                  </div>\n\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n      </nav>\n      \n        <Switch>\n          <Route\n            exact={true}\n            path=\"/watchlist/:id\"\n            render={(props) => <WatchListDetail {...props} />}//component = {WatchLIstdetail}?\n          />\n          <Route\n            exact={true}\n            path=\"/position/:id\"\n            render={(props) => <PositionDetail {...props} />}  \n          />\n           <Route exact={true} path=\"/\" component={UserDetail} />\n        </Switch>\n      \n    </main>\n  );\n};\n\nconst PositionSidebarContainer = () => {\n  const positions = useSelector((state) => Object.values(state.positions));\n  const watchedStocks = useSelector((state) => Object.values(state.watchedStocks));\n  const history = useSelector((state) => Object.values(state.history));\n  const dispatch = useDispatch();\n  return (\n    <PositionSidebar\n      positions={positions}\n      watchedStocks={watchedStocks}\n      history={history}\n      updatePositionAndGet={(data)=>{\n        dispatch(updatePositionAndGet(data))\n      }}\n      \n      exitWatchedStock={(id) => dispatch(exitWatchedStock(id))}\n    />\n  );\n};\n\nexport default PositionSidebarContainer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from './store/actions/authentication';\nimport { createInstance } from './store/actions/history';\nimport {Link} from 'react-router-dom'; \nimport leaf from './leaf-clipart-12-transparent.png';\n\nconst SignUpForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [cashValue, setCashValue] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newUser = {\n        name,\n        email,\n        cashValue,\n      password,\n      confirmPassword,\n    };\n    \n    await dispatch(signUp(newUser));\n\n    const deposit = cashValue;\n    const payload ={\n      deposit\n    };\n    await dispatch(createInstance(payload));\n\n   \n  };\n\n  return (\n    <main className=\"centered middled\">\n      <img src={leaf} alt=\"img\" />\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Full Name'\n          value={name}\n          onChange={updateProperty(setName)}\n          required\n        />\n        <input\n          type='email'\n          placeholder='Email'\n          value={email}\n          onChange={updateProperty(setEmail)}\n          required\n        />\n         <input\n          type=\"number\"\n          placeholder=\"Deposit Amount\"\n          required\n          value={cashValue}\n          onChange={updateProperty(setCashValue)}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updateProperty(setPassword)}\n        />\n        <input\n          type='password'\n          placeholder='Confirm Password'\n          value={confirmPassword}\n          onChange={updateProperty(setConfirmPassword)}\n        />\n        <button type='submit'>Sign Up</button>\n        <Link to=\"/login\">\n          <button type=\"button\">\n          Log in\n          </button>\n        </Link>\n      </form>\n    </main>\n  );\n};\n\nexport default SignUpForm;","import React from 'react'\n\nconst NotFound = props =>\n<h1>\n    Page not found\n</h1>\n;\n\nexport default NotFound;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Redirect, Switch, Route } from \"react-router-dom\";\n\nimport { loadToken } from \"./store/actions/authentication\";\nimport { ProtectedRoute, PrivateRoute } from \"./util/route-util\";\nimport LoginPanel from \"./LoginPanel\";\nimport PositionSidebar from \"./PositionSidebar\";\nimport SignUpForm from './SignUpForm';\nimport SearchDetailContainer from './search/SearchResults'\nimport NotFound from \"./NotFound\";\n\nconst App = ({ needLogin, loadToken }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(true);\n    loadToken();\n  }, []);\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute\n          path=\"/login\"\n          exact={true}\n          needLogin={needLogin}\n          component={LoginPanel}\n        />\n        <ProtectedRoute\n          path=\"/signup\"\n          exact={true}\n          needLogin={needLogin}\n          component={SignUpForm}\n        />\n        <PrivateRoute\n          path=\"/\"\n          needLogin={needLogin}\n          component={PositionSidebar}\n        />\n        <PrivateRoute\n          path=\"/search\"\n          needLogin={needLogin}\n          component={SearchDetailContainer}\n        />\n        <Route path='*' component={NotFound} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nconst AppContainer = () => {\n  const needLogin = useSelector((state) => !state.authentication.token);\n  const dispatch = useDispatch();\n  return <App needLogin={needLogin} loadToken={() => dispatch(loadToken())} />;\n};\n\nexport default AppContainer;\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authentication from \"./reducers/authentication\";\nimport positions from \"./reducers/positions\";\nimport ui from \"./reducers/ui\";\nimport currentPosition from \"./reducers/current-position\";\nimport currentUser from \"./reducers/current-user\";\nimport watchedStocks from './reducers/watched-stocks';\nimport history from './reducers/history';\nimport currentWatchedStock from './reducers/current-watched-stock'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({\n  authentication,\n  positions,\n  ui,\n  currentPosition,\n  currentUser,\n  watchedStocks,\n  currentWatchedStock,\n  history\n});\n\nconst configureStore = (initialState) => {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n};\n\nexport default configureStore;\n","import { SET_TOKEN, REMOVE_TOKEN } from \"../actions/authentication\";\n\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case SET_TOKEN: {\n      return {\n        ...state,\n        token: action.token,\n      };\n    }\n\n    case REMOVE_TOKEN: {\n      const newState = { ...state };\n      delete newState.token;\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import merge from \"lodash/merge\";\nimport { LOAD, EXIT } from \"../actions/positions\";\nimport { SET_CURRENT } from \"../actions/current-position\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case LOAD: {\n      const positions = action.list.map((position) => ({ [position.id]: position }));\n      return merge({}, state, ...positions);\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        [action.current.id]: action.current,\n      };\n    }\n    case EXIT: {\n      let newState = {...state }\n      delete newState[action.current.id]\n      return{\n      ...newState,\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { HIDE_FORM, SHOW_FORM } from \"../actions/ui\";\n\nexport default function reducer(state = { formVisible: false }, action) {\n  switch (action.type) {\n    case HIDE_FORM: {\n      return {\n        ...state,\n        formVisible: false,\n      };\n    }\n\n    case SHOW_FORM: {\n      return {\n        ...state,\n        formVisible: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT } from \"../actions/current-position\";\n\nexport default function reducer(state = null, action) {\n  switch (action.type) {\n    case SET_CURRENT: {\n      return action.current.id;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/current-user\";\n\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER: {\n      return {\n        ...state, \n        currentUser: action.id\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import merge from \"lodash/merge\";\nimport { LOAD_WATCHED, EXIT_WATCHED } from \"../actions/watched-stocks\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n  switch (action.type) {\n    \n    case LOAD_WATCHED: {\n      const watchedStocks = action.watchedList.map((watchedStock) => ({ [watchedStock.id]: watchedStock }));\n        return merge({}, state, ...watchedStocks);\n      \n  }\n    \n    case EXIT_WATCHED: {\n      let newState = {...state }\n      delete newState[action.current.id]\n      return{\n      ...newState,\n      }\n    }\n    default:\n      return state;\n  }\n}","import {SET_CURRENT_WATCHED_STOCK} from '../actions/current-watched-stock';\n\nexport default function reducer(state = null, action) {\n  switch (action.type) {\n    case SET_CURRENT_WATCHED_STOCK: {\n        return action.current.id;\n      }\n\n    default:\n      return state;\n  }\n}","import merge from \"lodash/merge\";\nimport { LOAD_HISTORY } from \"../actions/history\";\n\n\nexport default function reducer(state = {}, action) {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case LOAD_HISTORY: {\n      const history = action.historyList.map((instance) => ({ [instance.id]: instance }));\n      return merge({}, state, ...history);\n    }\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/leaf-clipart-12-transparent.49990580.png\";"],"sourceRoot":""}